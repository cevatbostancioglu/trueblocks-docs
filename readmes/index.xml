<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Readmes on</title><link>https://trueblocks.io/readmes/</link><description>Recent content in Readmes on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://trueblocks.io/readmes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://trueblocks.io/readmes/accounts-abis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/accounts-abis/</guid><description>chifra abis chifra abis retrieves ABI files for the given address(es). It searches for the ABI in this order: the current local folder, the TrueBlocks cache, Etherscan, or (in the future) ENS and Sourcify.
While this tool may be used from the command line and the API, its primary purpose is in support of tools such as chifra export to support the --articulate option.
The --known option prints a list of semi-standard function signatures such as the ERC20 standard, ERC 721 standard, various functions from OpenZeppelin, various Uniswap functions, etc.</description></item><item><title/><link>https://trueblocks.io/readmes/accounts-export/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/accounts-export/</guid><description>chifra export The chifra export tools provides a major part of the functionality of the TrueBlocks system. Using the index of appearances created with chifra scrape and the list of transaction identifiers created with chifra list, chifra export completes the actual extraction of an address&amp;rsquo;s transactional history from the node.
You may use topics, fourbyte values at the start of a transaction&amp;rsquo;s input data, and/or a log&amp;rsquo;s source address or emitter to filter the results.</description></item><item><title/><link>https://trueblocks.io/readmes/accounts-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/accounts-list/</guid><description>chifra list chifra list takes one or more addresses, queries the index of appearances, and builds TrueBlocks monitors. A TrueBlocks monitor is a file that contains blockNumber.transactionId pairs (transaction identifiers) representing the history of the address.
Because TrueBlocks only extracts data from the Ethereum node when it&amp;rsquo;s requested, the first time you list an address it takes about a minute. Subsequent queries are much faster because TrueBlocks caches the results.</description></item><item><title/><link>https://trueblocks.io/readmes/accounts-monitors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/accounts-monitors/</guid><description>chifra monitors chifra monitors`` has two purposes: (1) to &amp;ndash;watcha set of addresses. This function is in its early stages and will be better explained elsewhere. Please see an example of what one may do withchifra monitors &amp;ndash;watch`, and (2) allows one to manage existing monitored addresses.
A &amp;ldquo;monitor&amp;rdquo; is simply a file on a hard drive that represents the transactional history of a given Ethereum address. Monitors are very small, being only the &amp;lt;block_no&amp;gt;&amp;lt;tx_id&amp;gt; pair representing each appearance of an address.</description></item><item><title/><link>https://trueblocks.io/readmes/accounts-names/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/accounts-names/</guid><description>chifra names chifra names is a surprisingly useful tool. It allows one to associate textual names with Ethereum addresses. One may ask why this is necessary given that ENS exists. The answer is a single word: &amp;ldquo;privacy&amp;rdquo;. ENS names are public. In many cases, users desire to keep personal addresses private. Try to do this on a website.
Like chifra abis, this tool is useful from the command line but is primarily used in support of other tools, especially chifra export where naming addresses becomes the single best way to turn unintelligible blockchain data into understandable information.</description></item><item><title/><link>https://trueblocks.io/readmes/admin-chunks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/admin-chunks/</guid><description>chifra chunks The chifra chunks routine provides tools for interacting with, checking the validity of, cleaning up, and analyizing the Unchained Index. It provides options to list pins, the Manifest, summary data on the index, Bloom filters, addresses, and appearances. While still in its early stages, this tool will eventually allow users to clean their local index, clean their remote index, study the indexes, etc. Stay tuned.
Purpose: Manage, investigate, and display the Unchained Index.</description></item><item><title/><link>https://trueblocks.io/readmes/admin-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/admin-config/</guid><description>chifra config The chifra config program allows you to manage the various TrueBlocks caches. You may list all of the caches, some of the cache, or even individual caches either in terse or full detail. The cache of interest is specified with the modes option.
TrueBlocks maintains caches for the index of address appearances, named addresses, abi files, as well as other data including blockchain data, and address monitors.
Purpose: Report on and edit the configuration of the TrueBlocks system.</description></item><item><title/><link>https://trueblocks.io/readmes/admin-daemon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/admin-daemon/</guid><description>chifra daemon chifra daemon manages chifra&amp;rsquo;s long-running processes include its JSON API server. Each of the chifra commands along with all of its options, are provided not only by the command line, but also the API server. We call this process the flame server, which is written in Go.
In the future, this daemon may also manage other long-running processes.
Another way to get help to run chifra --help or chifra &amp;lt;cmd&amp;gt; --help on your command line.</description></item><item><title/><link>https://trueblocks.io/readmes/admin-init/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/admin-init/</guid><description>chifra init When invoked, chifra init reads a value from a smart contract called The Unchained Index (0x0c316b7042b419d07d343f2f4f5bd54ff731183d).
This value (manifestHashMap) is an IPFS hash pointing to a pinned file (called the Manifest) that contains a large collection of other IPFS hashes. These other hashes point to each of the Bloom filter and Index Chunk. TrueBlocks periodically publishes the Manifest&amp;rsquo;s hash to the smart contract. This makes the index available for our software to use and impossible for us to withhold.</description></item><item><title/><link>https://trueblocks.io/readmes/admin-scrape/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://trueblocks.io/readmes/admin-scrape/</guid><description>chifra scrape The chifra scrape application creates TrueBlocks&amp;rsquo; chunked index of address appearances &amp;ndash; the fundamental data structure of the entire system. It also, optionally, pins each chunk of the index to IPFS.
chifra scrape is a long running process, therefore we advise you run it as a service or in terminal multiplexer such as tmux. You may start and stop chifra scrape as needed, but doing so means the scraper will not be keeping up with the front of the blockchain.</description></item></channel></rss>